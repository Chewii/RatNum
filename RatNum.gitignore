import java.math.*; //Importerar .math så vi kan ta absolutbeloppet från m och n.
import java.io.*;

public class RatNum {

    private int numerator;
    private int denominator;

    public static String toString(int a,int b){

	String divisionFormat = String.valueOf(a) + "/" + String.valueOf(b);
	return divisionFormat;
    }

    public static double toDouble(int a,int b){

	double doubleFormat = (double)a/(double)b;
	doubleFormat = Math.floor(doubleFormat * 1e2)/1e2;
       	return doubleFormat;

    }

    public static String parse(String s){

	int a;
	String hej = "";
	int b;
	int slash = s.indexOf("/");
	
	try {
	    if(s.contains("/")){

			/* if(isLetter) för att ta se om det finns någon bokstav i strängen
			   annars så måste vi se var "/" finns i strängen och ta allt på ena = a och andra = b
			   
			 */

			hej = s.substring(0,slash);
			System.out.print(hej);
		
		

	    }else {
		b = 1;
	
	    }
	}catch(NumberFormatException e){
	   

	}

	//RatNum r = new Ratnum(a,b);	 	
	return "hej";
    }
    
 
    /*    

    public RatNum (String s){
	
	
    
    }*/


    public RatNum (){

	numerator = 0;
	denominator = 1;

    }

    public RatNum(int a){
	
	numerator = a;
	denominator = 1;
    }

    public RatNum(int a, int b){
	
	if(b < 0){
	    b = Math.abs(b);
	    a = a * -1;	
	} 

	if(b == 0){
	    throw new NumberFormatException("Denominator = 0");

	}else if(gcd(a,b) == 0){
	    numerator = a;
	    denominator = b;

	}else{
	    numerator = a/gcd(a,b);
	    denominator = b/gcd(a,b);
	}
    }

    public RatNum(RatNum r){

	numerator = r.getNumerator();
	denominator = r.getDenominator();

    }

    /*   public boolean equals(int r){
       
	if(r instanceof RatNum)
	
	if( this.numerator/this.denominator == r){

	    return true;
	    
	}
	return false;

    }
    */
    public static void main(String[] args) {

	System.out.print(parse("4/4"));
    }

    public int getNumerator(){
	return this.numerator;  
    }

    public int getDenominator(){
	return this.denominator;
    }
    
    
    public static int gcd(int m,int n){
	boolean getGcd = false; // här sätter vi booleanen getGcd till false för att kontrollera vi har hittat gcd.

	m = Math.abs(m); //Tar absolutbeloppet av m
	n = Math.abs(n); //Tar absolutbeloppet av n
	
	if(m == 0 && n == 0){
	    throw new IllegalArgumentException();
	    
	    //Om n = 0 och m = 0 "kastar" vi ett nytt exception.

	}else {
	    
	    int r = 0;
	    
	    while(getGcd == false){
		//Här är en while-loop. Som körs tills getGcd är sann, dvs då vi har hittat vår största gemensamma nämnare.

		if(n == 0){
		    //   System.out.println("Största gemensamma nämnare är " + m + " ");
		    
		    getGcd = true;
		    return m;
     
		   
		    //Om n är noll har vi fått vår största gemensamma nämnare. Vi sätter då getGcd till sann för att avsluta While-loopen.
		}
		
		r = m % n;

		m = n;
		n = r;
		
		//Här följer vi Euklides algoritm för att ta reda på största gemensamma nämnare.
		
	    }
	}
	return 0;
	}
}
